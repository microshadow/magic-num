[package]
name = "magic-num"
version = "0.1.0"
authors = ["Cristian Filipescu <cfilipescu@epicblockchain.io>"]
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
rand = "0.8"

// 2022-9-16, Yue
// Using a function magic_number() that returns a random unsigned byte 1 or 0, write a
// Rust (https://www.rust-lang.org/) application that will generate and print two random
// unsigned numbers: one between 0 and 255 and a second between 0 and 231.
// You must use the magic_number() function found in crate magic-num
// (https://github.com/cfilipescu/magic-num). Once complete upload your code to
// github.com or gitlab.com and share the link prior to the interview scheduled time.


// firstly, call the magic_number() fucntion 8 times, because 2^8 = 256, to generate a string of unsigned byte 
// presenting binary number, then convert the binary number to decimal number.

fn main() {
    
    let num = magic_num::magic_number();
    let mut s: String = num.to_string();
    let mut n = 7;

    // use the magic_number() function to generate a random binary stream
    while n > 0 {
        let temp_num = magic_num::magic_number();
        let mut temp_str: String = temp_num.to_string();
        s.push_str(&temp_str);

        n -= 1;
    }
    // output the final string
    println!("{}", s1;

    // convert the string (binary stream) to a decimal number
    let intVal = isize::from_str_radix(s, 2).unwrap();
    println!("{}", intVal);

}
